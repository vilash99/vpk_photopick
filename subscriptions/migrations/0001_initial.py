# Generated by Django 5.2.6 on 2025-09-19 17:37

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ReferralCredit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('days_awarded', models.PositiveIntegerField(default=15)),
                ('awarded_at', models.DateTimeField(auto_now_add=True)),
                ('reason', models.CharField(blank=True, default='referral_first_payment', max_length=255)),
                ('referee_org', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='referral_credit_received', to=settings.AUTH_USER_MODEL)),
                ('referrer_org', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referral_credits_earned', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['referrer_org'], name='subscriptio_referre_fa378a_idx'), models.Index(fields=['awarded_at'], name='subscriptio_awarded_12d30a_idx')],
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('stripe_customer_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('stripe_subscription_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('plan', models.CharField(choices=[('FREE', 'Free'), ('BASIC', 'Basic'), ('PRO', 'Pro')], default='FREE', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('past_due', 'Past due'), ('canceled', 'Canceled'), ('incomplete', 'Incomplete')], default='active', max_length=20)),
                ('current_period_end', models.DateTimeField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='subscription', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['status'], name='subscriptio_status_5e8870_idx'), models.Index(fields=['current_period_end'], name='subscriptio_current_e7d593_idx'), models.Index(fields=['plan'], name='subscriptio_plan_0d0f8d_idx')],
                'constraints': [models.CheckConstraint(condition=models.Q(('plan', 'FREE'), models.Q(('stripe_customer_id__isnull', False), models.Q(('stripe_customer_id', ''), _negated=True), ('stripe_subscription_id__isnull', False), models.Q(('stripe_subscription_id', ''), _negated=True)), _connector='OR'), name='paid_plans_require_stripe_ids'), models.CheckConstraint(condition=models.Q(('plan__in', ['BASIC', 'PRO']), models.Q(('stripe_customer_id__isnull', True), ('stripe_subscription_id__isnull', True)), _connector='OR'), name='free_plan_must_not_have_stripe_ids')],
            },
        ),
    ]
